"""
Django settings for news_letter project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import django_heroku
import builtins
from pathlib import Path
import os

if os.path.exists('..env.py'):
    from env import Config


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY') or Config.SECRET_KEY
STRIPE_PUBLIC_KEY = os.environ.get('STRIPE_PUBLIC_KEY') or Config.STRIPE_PUBLIC_KEY
STRIPE_SECRET_KEY = os.environ.get('STRIPE_SECRET_KEY') or Config.STRIPE_SECRET_KEY
STRIPE_WH_SECRET = os.environ.get('STRIPE_WH_SECRET') or Config.STRIPE_WH_SECRET

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'crispy_forms',
    'home_page',
    'products',
    'article_page',
    'cart',
    'checkout',
    'user_profiles',
    'subscriptions'
    ]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

SITE_ID = 1

ROOT_URLCONF = 'news_letter.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
                 os.path.join(BASE_DIR, 'news_letter',  'templates'),
                 os.path.join(BASE_DIR, 'templates', 'allauth'),
                 os.path.join(BASE_DIR, 'home_page', 'templates'),
                 os.path.join(BASE_DIR, 'products', 'templates'),
                 os.path.join(BASE_DIR, 'article_page', 'templates'),
                 os.path.join(BASE_DIR, 'cart', 'templates'),
                 os.path.join(BASE_DIR, 'checkout', 'templates'),
                 os.path.join(BASE_DIR, 'user_profiles', 'templates'),
                 os.path.join(BASE_DIR, 'subscriptions', 'templates')
                ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'cart.contexts.cart_content'
            ],
            # Added Crispy Forms to the Templates
            'builtins': [
                'crispy_forms.templatetags.crispy_forms_tags',
                'crispy_forms.templatetags.crispy_forms_field',
                ]
        },
    },
]

AUTHENTICATION_BACKENDS = [
        'django.contrib.auth.backends.ModelBackend',
        'allauth.account.auth_backends.AuthenticationBackend',
        ]

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

WSGI_APPLICATION = 'news_letter.wsgi.application'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

# ACCOUNT ACCESS CONFIGURATION

ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_SIGNUP_EMAIL_ENTER_TWICE = True
ACCOUNT_USERNAME_MIN_LENGTH = 5
ACCOUNT_USERNAME_MAX_LENGTH = 15
LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/'
ACCOUNT_LOGOUT_REDIRECT_URL = '/accounts/login/'


ACCOUNT_FORMS = {
                 "login": "news_letter.forms.CustomLoginForm",
                 "reset_password": "news_letter.forms.CustomResetPasswordForm"
                 }


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
# Configuration imported from untracked config file
# TODO: Change to environment variables for production & deployment

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.environ.get('DB_NAME') or Config.DB_NAME,
        'USER': os.environ.get('DB_USER') or Config.DB_USER,
        'PASSWORD': os.environ.get('DB_PASSWORD') or Config.DB_PASSWORD,
        'HOST': os.environ.get('DB_HOST') or Config.DB_HOST,
        'PORT': os.environ.get('DB_PORT') or Config.DB_PORT
    }
}

SOCIALACCOUNT_PROVIDERS = {
        # Insert social account API access here
        }


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)

MEDIA_URL = '/media/'
MEDIA_ROOT = (os.path.join(BASE_DIR, 'media'))

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Stripe Price ID

SUB_BASIC_MONTHLY = 'price_1KMJPmDDAG3wj1f360dQZoLl'
SUB_PREMIUM_MONTHLY = 'price_1KMMRjDDAG3wj1f3RdZGwgd1'

django_heroku.settings(locals())
